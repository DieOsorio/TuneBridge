import{s as i}from"./index-iY5zQft3.js";const o=[];for(let r=0;r<256;++r)o.push((r+256).toString(16).slice(1));function U(r,t=0){return(o[r[t+0]]+o[r[t+1]]+o[r[t+2]]+o[r[t+3]]+"-"+o[r[t+4]]+o[r[t+5]]+"-"+o[r[t+6]]+o[r[t+7]]+"-"+o[r[t+8]]+o[r[t+9]]+"-"+o[r[t+10]]+o[r[t+11]]+o[r[t+12]]+o[r[t+13]]+o[r[t+14]]+o[r[t+15]]).toLowerCase()}let d;const x=new Uint8Array(16);function E(){if(!d){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");d=crypto.getRandomValues.bind(crypto)}return d(x)}const b=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),h={randomUUID:b};function f(r,t,e){var u;if(h.randomUUID&&!r)return h.randomUUID();r=r||{};const n=r.random??((u=r.rng)==null?void 0:u.call(r))??E();if(n.length<16)throw new Error("Random bytes length must be >= 16");return n[6]=n[6]&15|64,n[8]=n[8]&63|128,U(n)}const D=async(r,t,e,n,u=!1)=>{if(!r)return n;try{if(u){const{data:w,error:g}=await i.storage.from(t).list(e);if(g)throw g;const y=w.map(a=>`${e}/${a.name}`);if(y.length>0){const{error:a}=await i.storage.from(t).remove(y);if(a)throw a}}const c=r.name.split(".").pop(),l=`${e}/${f()}.${c}`,{error:m}=await i.storage.from(t).upload(l,r,{cacheControl:"3600",upsert:!1});if(m)throw m;const{data:s,error:p}=i.storage.from(t).getPublicUrl(l);if(p)throw p;return s==null?void 0:s.publicUrl}catch(c){return console.error(`Error uploading file to bucket "${t}":`,c.message),n}};export{D as u};
